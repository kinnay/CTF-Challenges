
fields = [
	2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 1,
	2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 1, 2, 2, 2,
	2, 0, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2,
	0, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 1, 0, 2, 2, 1, 2, 2, 2, 2, 0, 2,
	2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2,
	2, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 0, 2, 2, 2, 2,
	0, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 1, 0
]

solution = [
	1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1,
	1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0,
	0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1,
	0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0,
	1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0,
	1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0,
	0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,
	1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0,
	0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1,
	1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1,
	0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0,
	0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0
]

for i in range(len(solution)):
	if fields[i] != 2:
		solution[i] = -1


def genpuzzle():
	data = []

	index = 0
	value = 0
	for field in fields:
		value |= field << index
		index += 2
		if index == 8:
			index = 0
			data.append(value)
			value = 0

	return bytes(data).hex()

def gensolution():
	data = []
	value = 0
	index = 0
	for bit in solution:
		if bit == -1:
			continue
		value |= bit << index
		index += 1
		if index == 7:
			data.append(value)
			index = 0
			value = 0
	
	if index != 0:
		data.append(value)
	return bytes(data)
